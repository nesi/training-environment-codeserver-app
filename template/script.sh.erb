#!/usr/bin/env bash

# Set our working directory.
export WORKING_DIR="<%= session.staged_root %>"


# Ensure that code-server always starts up in either a user defined directory or the home directory.
if [ ! -e "${WORKING_DIR}" ]; then
    ${WORKING_DIR}="$HOME"
elif [ -f "${WORKING_DIR}" ]; then
    ${WORKING_DIR}="$(dirname "${WORKING_DIR}")"
fi

CODE_SERVER_DATAROOT="$HOME/.local/share/code-server"
mkdir -p "$CODE_SERVER_DATAROOT/extensions"

# Expose the password to the server.
export PASSWORD="$password"

# Print compute node.
echo "$(date): Running on compute node ${host}:$port"


#Probably not needed but leaving as it is for the moment as per upstream record. 
CPP_FILE="${WORKING_DIR}/.vscode/c_cpp_properties.json"

if [[ -f "$CPP_FILE" ]]; then
    CPP_DIR="${TMPDIR:=/tmp/$USER}/cpp-vscode"
    mkdir -p "$CPP_DIR"
    chmod 700 "$CPP_DIR"

    # if the file is empty, let's initialize it
    [ -s "$CPP_FILE" ] || echo '{"configurations": [{ "name": "Linux", "browse": { "databaseFilename": null }}], "version": 4}' > "$CPP_FILE"

    jq --arg dbfile "$CPP_DIR/cpp-vscode.db" \
      '.configurations[0].browse.databaseFilename = $dbfile' \
      "$CPP_FILE" > "$CPP_FILE".new

    mv "$CPP_FILE".new "$CPP_FILE"
  fi

#
# Start Code Server.
#
echo "$(date): Started code-server"
echo ""

code-server \
    --auth="password" \
    --bind-addr="${host}:8443" \
    --disable-telemetry \
    --user-data-dir="${CODE_SERVER_DATAROOT}" \
    --log debug 
